# vim: set tabstop=2 shiftwidth=2 foldmethod=marker:

# TMUX DEFAULTS # {{{

# vi-copy mappings
# C-d C-u : f F t T HLM C-f C-b C-e C-y
# C-Up C-Down

# emacs-edit mappings
# C-d (delete) C-k (delete till-EOL)
# C-a C-e
# C-w C-y
# M-b M-f

# { swap-pane -U
# } swap-pane -D
# space next-layout
# q display-panes
# , rename-window
# . move-window
# }}}

# SSH environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# initialization # {{{
set -g prefix C-q
set -g default-terminal "screen-256color"
set -g status-utf8 on
set -g set-titles on
set -g set-titles-string '[#I] #W'
set -g set-clipboard off
setw -g window-status-current-format '«#I: #W#F»'
setw -g window-status-format ' #I: #W '
setw -g automatic-rename on
setw -g window-status-attr bold
# time after which the -r (repeat) in bind -r expires. keep it short.
set -g repeat-time 1000
setw -g monitor-activity on
# don't bug me with a message
set -g visual-activity off
# like 'timeout' for vim. Just the default.
set -sg escape-time 500
set -g mode-keys vi
set -g history-limit 10000
# windows/panes start with 1
set -g base-index 1
setw -g pane-base-index 1
# C-a C-a sends a normal C-a through
unbind C-b
bind C-q send-prefix
# status
set -g status-justify centre
set -g status-left-length 40
set -g status-right "%H:%M %d-%b-%y"
set -g status-left ""
# required to source ~/.bashrc and such
set -g default-command "/bin/bash"
# not very much useful for now
#set -g status-left "pane spec: [#S.#I.#P]"
#status-right ""#22T" %H:%M %d-%b-%y"
setw -g xterm-keys on
#terminal-overrides ""
set -g status-position top
set -g renumber-windows on
# }}}

bind -n C-k clear-history

# vi-copy mappings # {{{
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy "'" jump-again
unbind -t vi-copy '\;'
bind -t vi-copy '\;' jump-reverse
bind -t vi-copy "M-'" end-of-line
bind -t vi-copy "M-\\;" back-to-indentation
bind -t vi-copy "Home" start-of-line
bind -t vi-copy "End" end-of-line
bind -t vi-copy C-h previous-space
bind -t vi-copy C-j cursor-down
bind -t vi-copy C-k cursor-up
bind -t vi-copy C-l next-space
# }}}

# r, /, C-o, easy tmux devel mode # {{{
bind r source-file ~/.tmux.conf \; display "Tmux Reloaded!"
bind / list-keys -t vi-copy
bind C-o show-options -g
# }}}

# integration with clipboard and primary selection # {{{

# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
# }}}

# window mappings # {{{
unbind %
unbind '"'
unbind "'"
unbind l
bind | split-window -h
bind \ split-window -h
bind v split-window -h
bind - split-window -v
bind -r H resize-pane -L 15
bind -r J resize-pane -D 15
bind -r K resize-pane -U 15
bind -r L resize-pane -R 15
unbind \;
bind \; last-window
unbind s
bind S choose-session
bind s split-window -v
bind -r C-n next-window
bind -r C-p previous-window
bind -n C-NPage next-window
bind -n C-PPage previous-window
bind i choose-window "swap-window -t '%%'"
bind -n M-PPage copy-mode -u
# }}}

# pane mappings # {{{
unbind o
bind Tab select-pane -t :.+
bind BTab select-pane -t :.-
bind -n M-\ select-pane -t :.+
bind -n M-| select-pane -t :.-
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R
bind "'" last-pane
# }}}

# mouse # {{{
setw -g mouse on
# }}}

# colors # {{{
# status bar (51=light blue 233=very dark grey)
set -g status-fg colour51
set -g status-bg colour233
# windows listing in the status bar
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg colour18
setw -g window-status-current-attr bright
set -g window-status-activity-fg cyan
set -g window-status-activity-bg colour235
set -g window-status-activity-attr dim
# highlighting of pane borders
set -g pane-active-border-fg white
set -g pane-active-border-bg colour17
set -g pane-border-fg white
# messages
set -g message-bg colour135
# }}}

